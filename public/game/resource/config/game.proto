syntax = "proto3";

message LoginReq {
	string uId = 1;
	string nick = 2;
	string photo = 3;
}
message LoginResp {
	int32 res = 1;
}

message CreateRoomReq {
	int32 nSumUser = 1;// 人数
}
message CreateRoomResp {
	int32 res = 1;
	int32 nIdRoom = 2;// 房间ID
	int32 nSumUser = 4;
}

message JoinRoomReq {
	int32 nIdRoom = 1;
}
message JoinRoomResp {
	int32 res = 1;
	int32 nIdRoom = 2;
	int32 nSumUser = 3;
	string uIdHost = 4;
	repeated UserJoin users = 5;
}
message UserJoin {
	string uId = 1;
	string nick = 2;
	string photo = 3;
	int32 nPos = 4;
}

message StartGameReq {
	string n = 1;// 无意义
}
message StartGameResp {
	int32 res = 1;
}

message OperateLuckyNextResp {
	int32 nPos = 1;// 下一位操作玩家位置索引
}

message OperateLuckyEndReq {
	int32 nPos = 1;
}
message OperateLuckyEndResp {
	int32 res = 1;
	int32 nPos = 2;// 操作玩家位置索引
	int32 n = 3;// 摇出的点数
}

message OperateFlyReq {
	int32 fInd = 1;// 选定飞机的索引
}
message OperateFlyResp {
	int32 nPos = 1;// 操作玩家位置索引
	int32 fInd = 2;// 走动棋子的索引
	int32 nStep = 3;// 前进点数 摇出的骰子个数
	int32 typeGridTo = 6;// 进入的格子类型 前进骰子结果数后
	int32 nDesti = 4;// 终点格子位置 此次的最终位置（由骰子和进入格子类型决定的最终位置）
	int32 res = 5;
	repeated int32 flBk = 7;
}

message ResultGameResp {

}

message BroadcastRoomInfo {
	int32 operate = 1;// 1 玩家进入；2 玩家掉线；3 玩家重新上线；
	string uId = 2;
	string nick = 3;
	string photo = 4;
	int32 nPos = 5;
}
message BroadcastOperateInfo {
	int32 operate = 1;// 1 玩家进入；2 玩家掉线；3 玩家重新上线；
	string uId = 2;
	string nick = 3;
	string photo = 4;
	int32 nPos = 5;
}


// 示例
//message example{
//	string cityId = 1;
//	LoginResp info = 2;
//	bool bo = 3;
//	repeated string buildingId = 4;
//	optional int32 soldierType = 5;
//}
